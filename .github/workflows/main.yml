name: Automated Release ⭐

on:
  push:  # 모든 커밋 push 이벤트 발생 시 작동

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release Executable
    runs-on: windows-latest
    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. PyInstaller로 실행 파일 빌드
      - name: Build Executable
        uses: sayyid5416/pyinstaller@v1
        with:
          python_ver: '3.10'
          spec: 'main.py'
          requirements: 'requirements.txt'
          upload_exe_with_name: 'main'
          options: --onefile, --windowed, --noconsole, --add-data web:web, --icon icon.ico

      # 3. 빌드된 실행 파일을 artifacts 디렉토리로 이동
      - name: Archive Executable
        run: |
          mkdir artifacts
          move dist\main.exe artifacts\main.exe

      # 4. 자동 태그 생성 및 릴리스 생성
      - name: Create Release and Upload Executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        shell: pwsh
        run: |
          # 현재 시간 기반으로 자동 태그 생성
          $version = (Get-Date -Format "yyyyMMdd-HHmmss")  # 형식: yyyyMMdd-HHmmss
          $tag = "v$version"

          # 자동 태그 생성
          git tag $tag
          git push origin $tag

          # Release 만들기 및 실행 파일 업로드
          gh release create $tag `
            --repo "$REPO" `
            --title "Release $version" `
            --notes "Automatically generated release for commit: ${{ github.sha }}" `
            artifacts\main.exe

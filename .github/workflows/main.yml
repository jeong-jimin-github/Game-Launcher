name: Automated Release with UPX ⭐

on:
  push:  # 모든 Push 이벤트에서 실행

permissions:
  contents: write

jobs:
  build-and-release:
    name: Build and Release Executable
    strategy:
      matrix:
        os: [windows-latest, macos-latest]  # Windows와 macOS에서 빌드 실행
    runs-on: ${{ matrix.os }}
    steps:
      # 1. 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Python 환경 설정
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3. 의존성 설치
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. PyInstaller로 실행 파일 빌드
      - name: Build Executable with PyInstaller
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            pyinstaller --onefile --windowed --noconsole --add-data web:web --icon icon.ico --upx-dir upx main.py
          else
            pyinstaller --onefile --windowed --noconsole --add-data web:web --upx-dir upx main.py
          fi

      # 5. 빌드 결과를 artifacts 디렉터리에 복사
      - name: Archive Executable
        run: |
          mkdir artifacts
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv dist/main.exe artifacts/main-windows.exe
          else
            mv dist/main artifacts/main-macos
          fi

      # 6. 자동 태그 생성 및 릴리스 생성
      - name: Create Release and Upload Executable
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # 현재 시간 기반으로 태그 생성
          version=$(date +%Y%m%d-%H%M%S)  # 형식: yyyyMMdd-HHmmss
          tag="v$version"

          # 태그 푸시
          git tag $tag
          git push origin $tag

          # Release 생성
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            gh release create "$tag" \
              --title "Windows Release: $version" \
              --notes "Automatically generated release for Windows." \
              artifacts/main-windows.exe
          else
            gh release create "$tag" \
              --title "MacOS Release: $version" \
              --notes "Automatically generated release for MacOS." \
              artifacts/main-macos
          fi